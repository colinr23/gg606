[["intro.html", "Chapter 2 Wrangling 2.1 Data Science Workflows 2.2 i/o 2.3 Data objects 2.4 Databases 2.5 Spatial data 2.6 Temporal data", " Chapter 2 Wrangling 2.1 Data Science Workflows 2.1.1 Reading This week will provide an introduction to data science using r. You will be introduced to data science through the lens of exploratory data analysis, beginning with the Explore section of the textbook, read and work through the following chapters: W&amp;G - Introduction W&amp;G - Data visualization W&amp;G - Data Transformation W&amp;G - Workflow: basics W&amp;G - Workflow: scripts W&amp;G - Workflow: projects 2.1.2 Excercise Review Data Visualization: 1, 2, 3, 4, 5, 6 Workflow: basics: 1 2.2 i/o 2.2.1 Reading This week will cover the surprisingly important topic of data i/o - that is, data importing and outputting data. In the Wrangle section of the textbook, read and work through the following chapters: JHDSc - Data import W&amp;G - Tidy data As well as the paper describing the tidy approach to data, published in the Journal of Statistical Software. R documentation - Review of Data Import/Export Data sources and formats vary widely in environmental data analytics. Data acquisition is the steps taken to access and load data for your own analysis. In a classic analysis workflow architecture, data are downloaded to a local working computer and interact with software installed there to complete your analysis. Raw data almost always has to be processed in different ways to make it useful. This can in include Quality Assurance/Quality Control (QA/QC) steps such as checking and removing duplicate records, cleaning out special characters from text, to things like date formatting and computing derived variables. Having a consistent way to generate data transformations is a cornerstone of reproducible research and modern scientific data workflows. This is one of the key reasons scripting has become so important to environmental data analytics. The tidy approach to data science aims to provide a cohesive and consistent approach to data organization in r. 2.3 Data objects 2.3.1 Reading We will cover some more basic elements of the R programming language - both at the base and more modern levels. At some point having an understanding of how R works at a deeper level becomes necessary to get the most out of it and develop effective analysis and visualization approaches. Wickham - Vectors TCL - Wrangling 2.4 Databases 2.4.1 Resources There are no dedicated readings this week, but below are some of the resources discussed during class this week. R-studio docs Examples of lazy execution 2.5 Spatial data Spatial data wrangling encompasses a set of techniques usually found in standard GIS courses. Tasks such as spatial query, spatial overlay, combining vector and raster data, are all often necessary steps in preparing spatial data for analysis. Due to the mature collection of packages for working with spatial data n r, all of these operations can be performed in r, generally through a tidy workflow. 2.5.1 Reading 501 Lecture slides for review Pebezma 2018 Pebezma - geom Pebezma - sf Gimond Appendix- Walk-thru of common spatial operations 2.6 Temporal data Temporal data wrangling - there are many many packages and classes available for handling temporal data and doing time series analysis. We will review some of the basic packages for reading and manipulating time-based data. 2.6.1 Space-time data - STARS package exploration Letâ€™s work thru some of the vignettes describing the relatively new stars package which combines functionality and classes for spatial and temporal data. View the vignette here library(stars) ## Loading required package: abind methods(class = &quot;stars&quot;) ## [1] [ [[&lt;- [&lt;- %in% ## [5] $&lt;- adrop aggregate aperm ## [9] as_tibble as.data.frame c coerce ## [13] contour cut dim dimnames ## [17] dimnames&lt;- droplevels filter hist ## [21] image initialize is.na Math ## [25] merge mutate Ops plot ## [29] predict print pull rename ## [33] replace_na select show slice ## [37] slotsFromS3 split st_apply st_area ## [41] st_as_sf st_as_sfc st_as_stars st_bbox ## [45] st_coordinates st_crop st_crs st_crs&lt;- ## [49] st_dimensions st_dimensions&lt;- st_downsample st_extract ## [53] st_geometry st_interpolate_aw st_intersects st_join ## [57] st_mosaic st_normalize st_redimension st_sample ## [61] st_set_bbox st_transform_proj st_transform transmute ## [65] write_stars ## see &#39;?methods&#39; for accessing help and source code tif = system.file(&quot;tif/L7_ETMs.tif&quot;, package = &quot;stars&quot;) x = read_stars(tif) plot(x, axes = TRUE) ## downsample set to 1 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
